// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myArchery.Persistance;

#nullable disable

namespace myArchery.Persistance.Migrations
{
    [DbContext(typeof(myarcheryContext))]
    partial class myarcheryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("myArchery.Persistance.Models.Arrow", b =>
                {
                    b.Property<int>("ArrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArrId"), 1L, 1);

                    b.Property<int>("EvusroId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hitdatetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PataId")
                        .HasColumnType("int");

                    b.Property<int>("PoiId")
                        .HasColumnType("int");

                    b.HasKey("ArrId");

                    b.HasIndex("EvusroId");

                    b.HasIndex("PataId");

                    b.HasIndex("PoiId");

                    b.ToTable("Arrows");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Event", b =>
                {
                    b.Property<int>("EveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EveId"), 1L, 1);

                    b.Property<int>("Arrowamount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eventname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Isprivat")
                        .HasColumnType("smallint");

                    b.Property<int>("ParId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime2");

                    b.HasKey("EveId");

                    b.HasIndex("ParId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.EventUserRole", b =>
                {
                    b.Property<int>("EvusroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvusroId"), 1L, 1);

                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UseId")
                        .HasColumnType("int");

                    b.HasKey("EvusroId");

                    b.HasIndex("EveId");

                    b.HasIndex("RolId");

                    b.HasIndex("UseId");

                    b.ToTable("EventUserRoles");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Parcour", b =>
                {
                    b.Property<int>("ParId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParId"), 1L, 1);

                    b.Property<int>("Counttargets")
                        .HasColumnType("int");

                    b.Property<string>("Parcourname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Postalcode")
                        .HasColumnType("int");

                    b.Property<string>("StreetHousenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParId");

                    b.ToTable("Parcours");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.ParcoursTarget", b =>
                {
                    b.Property<int>("PataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PataId"), 1L, 1);

                    b.Property<int>("ParId")
                        .HasColumnType("int");

                    b.Property<int>("TarId")
                        .HasColumnType("int");

                    b.HasKey("PataId");

                    b.HasIndex("ParId");

                    b.HasIndex("TarId");

                    b.ToTable("ParcoursTargets");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.PasswordHistory", b =>
                {
                    b.Property<int>("PhyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhyId"), 1L, 1);

                    b.Property<DateTime>("Fromdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Untildate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UseId")
                        .HasColumnType("int");

                    b.HasKey("PhyId");

                    b.HasIndex("UseId");

                    b.ToTable("PasswordHistories");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Point", b =>
                {
                    b.Property<int>("PoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoiId"), 1L, 1);

                    b.Property<int>("EveId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<int>("ValueId")
                        .HasColumnType("int");

                    b.HasKey("PoiId");

                    b.HasIndex("EveId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Role", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<string>("Rolename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Target", b =>
                {
                    b.Property<int>("TarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TarId"), 1L, 1);

                    b.Property<string>("Targetname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TarId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.User", b =>
                {
                    b.Property<int>("UseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UseId"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Getnewsletter")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Isactive")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UseId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Arrow", b =>
                {
                    b.HasOne("myArchery.Persistance.Models.EventUserRole", "Evusro")
                        .WithMany("Arrows")
                        .HasForeignKey("EvusroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myArchery.Persistance.Models.ParcoursTarget", "Pata")
                        .WithMany("Arrows")
                        .HasForeignKey("PataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myArchery.Persistance.Models.Point", "Poi")
                        .WithMany("Arrows")
                        .HasForeignKey("PoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evusro");

                    b.Navigation("Pata");

                    b.Navigation("Poi");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Event", b =>
                {
                    b.HasOne("myArchery.Persistance.Models.Parcour", "Par")
                        .WithMany("Events")
                        .HasForeignKey("ParId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Par");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.EventUserRole", b =>
                {
                    b.HasOne("myArchery.Persistance.Models.Event", "Eve")
                        .WithMany("EventUserRoles")
                        .HasForeignKey("EveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myArchery.Persistance.Models.Role", "Rol")
                        .WithMany("EventUserRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myArchery.Persistance.Models.User", "Use")
                        .WithMany("EventUserRoles")
                        .HasForeignKey("UseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eve");

                    b.Navigation("Rol");

                    b.Navigation("Use");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.ParcoursTarget", b =>
                {
                    b.HasOne("myArchery.Persistance.Models.Parcour", "Par")
                        .WithMany("ParcoursTargets")
                        .HasForeignKey("ParId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myArchery.Persistance.Models.Target", "Tar")
                        .WithMany("ParcoursTargets")
                        .HasForeignKey("TarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Par");

                    b.Navigation("Tar");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.PasswordHistory", b =>
                {
                    b.HasOne("myArchery.Persistance.Models.User", "Use")
                        .WithMany("PasswordHistories")
                        .HasForeignKey("UseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Use");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Point", b =>
                {
                    b.HasOne("myArchery.Persistance.Models.Event", "Eve")
                        .WithMany("Points")
                        .HasForeignKey("EveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eve");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Event", b =>
                {
                    b.Navigation("EventUserRoles");

                    b.Navigation("Points");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.EventUserRole", b =>
                {
                    b.Navigation("Arrows");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Parcour", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("ParcoursTargets");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.ParcoursTarget", b =>
                {
                    b.Navigation("Arrows");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Point", b =>
                {
                    b.Navigation("Arrows");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Role", b =>
                {
                    b.Navigation("EventUserRoles");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.Target", b =>
                {
                    b.Navigation("ParcoursTargets");
                });

            modelBuilder.Entity("myArchery.Persistance.Models.User", b =>
                {
                    b.Navigation("EventUserRoles");

                    b.Navigation("PasswordHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
