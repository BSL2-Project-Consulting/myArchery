@using myArchery.Services
@using myArchery.Services.TmpClasses
@inject ArrowService _arrowService
@inject EventService _eventService

@model TargetTemplate
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    if (!User.Identity.IsAuthenticated)
    {
        // redirect to Login
    }

    ViewData["Title"] = "Current Event";
    ViewData["Event"] = Model.Eventname;

    var usern = User.Identity.Name;

    var events = EventService.GetEventById(Model.EveId);

    var users = _eventService.GetUsersWithPointsFromEventById(Model.EveId);


    var repheight = 400 / 5 * users.Count() + "px";

    double maxPoints = 50;

    var tmp = _arrowService.GetArrowInfo(events.EveId);
    var tmp2 = tmp;

    var allNames = tmp2.Select(x => x.Username).ToArray();
    var allPoints = tmp2.Select(x => x.Points);

    tmp = tmp.Where(x => x.Username == User.Identity.Name).ToList();


    var overallPoints = users.Select(x => x.Points).ToArray();


    var points = tmp.Select(x => x.Points);

    var points2 = tmp.Select(x => x.Points).ToArray();

    var targetName = tmp.Select(x => x.TargetName).ToArray();

    var username = tmp.Select(x => x.Username);

    var hitted = 0;
    var missed = 0;


    foreach (var item in points) {

        if (item > 0.0){
            hitted++;
        }
        else{
            missed++;
        }
    }
    string listofAllNames = " ";

    string punkte = " ";
    string punkte2 = " ";

    string name = " ";

    for (var i = 0; i < points2.Count(); i++)
    {
        if (i+1 == points2.Count())
        {
            punkte += $"'{points2[i]}'";
        }
        else
        {
            punkte += $"'{points2[i]}',";
        }
    }

    for (var i = 0; i < overallPoints.Count(); i++)
    {
        if (i+1 == overallPoints.Count())
        {
            punkte2 += $"{overallPoints[i]}";
        }
        else
        {
            punkte2 += $"{overallPoints[i]},";
        }
    }

   for (var i = 0; i < targetName.Count(); i++)
    {
        if (i+1 == targetName.Count())
        {
            name += $"'{targetName[i]}'";
        }
        else
        {
            name += $"'{targetName[i]}',";
        }
    }

    for (var i = 0; i < allNames.Count(); i++)
    {
        if (i+1 == allNames.Count())
        {
            listofAllNames += $"'{allNames[i]}'";
        }
        else
        {
            listofAllNames += $"'{allNames[i]}',";
        }
    }

}

<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="uft-8">
    <meta http-equiv="content-type" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>Event - Erstes Event</title>
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="~/assets/img/logo/logo_archery.png" rel="icon">

    <!-- Google Fonts -->
    <link
        href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Krub:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"
        rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="~/assets/css/vendor/aos/aos.css" rel="stylesheet">
    <link href="~/assets/css/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/assets/css/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="~/assets/css/vendor/boxicons/css/boxicons.min.css " rel="stylesheet">
    <link href="~/assets/css/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="~/assets/css/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">
    <link href="~/assets/css/archery-event.css" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="~/assets/css/style.css" rel="stylesheet">
    <link href="~/assets/css/archery-event.css" rel="stylesheet">

    <!-- Navbar Login Form Input -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script src="~/assets/js/archery.js"></script>
    <script src="~/assets/js/CurrentEvent.js"></script>

    <link rel= href="~/assets/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" />

    <!-- CHARTS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.js" integrity="sha512-Lii3WMtgA0C0qmmkdCpsG0Gjr6M0ajRyQRQSbTF6BsrVh/nhZdHpVZ76iMIPvQwz1eoXC3DmAg9K51qT5/dEVg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>

    <partial name="_HeaderPartial"/>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.1/chart.js" integrity="sha512-Lii3WMtgA0C0qmmkdCpsG0Gjr6M0ajRyQRQSbTF6BsrVh/nhZdHpVZ76iMIPvQwz1eoXC3DmAg9K51qT5/dEVg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    let eventid = @events.EveId;
    //let eventid = 1;
    let username = "@User.Identity.Name";
</script>

<section id="current-event">

<!-- <div class="form-box">
<div class="button-box">
<div id="btn"></div>
<button class="toogle-btn" onclick="event()">Login</button>
<button class="toogle-btn" onclick="ranking()">Register</button>
</div>
-->

</section>
    <script>

           window.onload = function () {
        console.log('Dokument geladen');
        myChart1(@hitted, @missed);
        myChart2();
        myChart4();
    }




  

</script>
@if (Model.TargetName == null)
{
    <div class="container">

    

    <div class="container">
        <div class="row">
            <div class="col-6 chart">
                <canvas id="myChart" width="500" height="400"></canvas>         
            </div>
            <div class="col-6 chart">
                <canvas id="myChart2" width="500" height="400" onload=" myChart2(@points2, @targetName)"></canvas>
            </div>
        </div>
        <div class="row">
            <div class="col-6 chart">
                <canvas id="myChart4" width="500" height="400"></canvas>
            </div>
            <div class="col-6 chart">
                <canvas id="myChart3" width="500" height="400"></canvas>
            </div>
        </div>
    </div>
    
        <div>
            <div class="col-6 chart">
                <canvas id="myChart" width="500" height="400"></canvas>
                
            </div>
            <div class="col-6 chart">
                <canvas id="myChart2" width="500" height="400"></canvas>
            </div>
        </div>
        <div class="row">
            <div class="col-6 chart">
                <canvas id="myChart4" width="500" height="400"></canvas>
            </div>
            <div class="col-6 chart">
                <canvas id="myChart3" width="500" height="400"></canvas>
            </div>
        </div>
    </div>
}
else
{
    <section id="current-event">

        <!-- <div class="view_toggle" style="display: block; margin-top: 80px;">
                <input id="toggle" class="toggle" type="checkbox" />
            </div>
        -->
        <div class="vertical-center">
            <input type="checkbox" id="lol-checkbox">
            <label id="button" for="lol-checkbox">
                <div id="knob"></div>
                <div id="subscribe">Target</div>
                <div id="alright">Ranking</div>
            </label>
        </div>
        <div id="targets" class="targets current-event-element" style="display: block;">
            <div class="row">
                <div class="col-12">
                    <h1>Target</h1>
                    <h2>@Model.TargetName</h2>
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-2"></div>
                <div class="col-12">
                    <form method="post">
                        <div class="radiobtn">
                            <input type="radio" id="ck" name="drone" value="ck" checked />
                            <label for="ck">Center Kill</label>
                        </div>

                        <div class="radiobtn">
                            <input type="radio" id="k" name="drone" value="k" />
                            <label for="k">Kill</label>
                        </div>

                        <div class="radiobtn">
                            <input type="radio" id="b" name="drone" value="b" />
                            <label for="b">Body</label>
                        </div>

                        <div class="radiobtn">
                            <input type="radio" id="nh" name="drone" value="nh" />
                            <label for="nh">No Hit</label>
                        </div>

                        <div class="radiobtn">
                            <button class="save_button" value="CurrentEvent" asp-route-id="@Model.EveId" type="submit" name="save">Save</button>
                        </div>
                    </form>
                </div>
                <div class="col-2"></div>
            </div>

        </div>

        <div id="ranking" class="ranking current-event-element" style="display: none;">
            <div class="row">
                <div class="col-12">
                    <h1>Live Ranking</h1>
                    <h2></h2>
                </div>
            </div>

            <br>

            <div class="row">
                <div class="col-2"></div>
                <div class="col-12">
                    <table id="players">
                        <tr>
                            <th>Spieler</th>
                            <th>Punkte</th>
                        </tr>
                        @foreach (var item in tmp)
                        {
                            <tr>
                                <td>@item.Username</td>
                                <td>@item.Points</td>
                            </tr>
                        }
                    </table>
                </div>
                <div class="col-2"></div>
            </div>

        </div>
    </section>
        }

    
    <section id="Chat">
        <script src="~/assets/js/chat2.js"></script>
        <link rel="stylesheet" href="~/assets/css/chat.css">
        <link rel="stylesheet" href="~/assets/css/style.css">
        <link rel="stylesheet" href="~/assets/css/typing.css">

        <div class="container">
            <div class="chatbox">
                <div class="chatbox__support">
                    <div class="chatbox__header">
                        <div class="chatbox__content--header">
                            <h4 class="chatbox__heading--header">@ViewData["Event"]</h4>
                            <p class="chatbox__description--header">This is the Chat for the @ViewData["Event"] Event</p>
                        </div>
                    </div>
                    <div class="chatbox__messages">
                        <div id="messagesList">
                        </div>
        
                    </div>
                    <div class="chatbox__footer">
                        <img src="~/assets/img/icons/emojis.svg" alt="">
                        <img src="~/assets/img/icons/microphone.svg" alt="">
                        <input type="text" id="messageInput" placeholder="Write a message...">
                        <button id="sendButton">Send Message</button>
                        <img src="~/assets/img/icons/attachment.svg" alt="">
                    </div>
                </div>
                <div  class="chatbox__button">
                    <button id="sendButton">send message</button>
                </div>
            </div>
        </div>
        <script src="~/assets/js/app.js"></script>
        <script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
        <script>
            let user = '@User.Identity.Name';
            let html = "";

            "use strict";

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chathub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            async function start() {
                try {
                    await connection.start();
                    document.getElementById("sendButton").disabled = false;
                    console.log("SignalR Connected.");
                } catch (err) {
                    console.log(err);
                    setTimeout(start, 5000);
                }
            };

            connection.onclose(async () => {
                await start();
            });

            // Start the connection.
            start();

            //Disable the send button until connection is established.
            document.getElementById("sendButton").disabled = true;

            connection.on("ReceiveMessage", function (username, message) {
                var messageString;
            
                if(username == user){
                    // user is sender
                    messageString = '<div class="messages__item messages__item--operator">'+
                                        'Me:'
                                        +message+
                                        '</div>';
                }else{
                    // user is receiver
                    messageString = '<div class="messages__item messages__item--visitor">'+
                                        username +':'
                                        +message+
                                        '</div>';
        }

                //document.getElementById("messagesList").append(messageString);
                html += messageString;
                document.getElementById("messagesList").innerHTML = html;
            });

            document.getElementById("sendButton").addEventListener("click", function (event) {
                var message = document.getElementById("messageInput").value;
                if(message != ""){
                    connection.invoke("SendMessage", user, message).catch(function (err) {
                    return console.error(err.toString());
                });
                }
                event.preventDefault();
            });
        </script>
</section>

<script>

function myChart1(hitted, missed) {
    var hitted = hitted;
    let labels1 = ['Hitted', 'Missed'];
    let data1 = [hitted, missed];


    // let data1 = [59, 31];               //User Data per User how often he missed
    let colors1 = ['#49A9EA', '#36CAAB'];

    let myDoughnutChart = document.getElementById("myChart").getContext('2d');

    let chart1 = new Chart(myDoughnutChart, {
        type: 'doughnut',
        data: {
            labels: ['Hitted', 'Missed'],
            datasets: [{
                data: [data1[0], data1[1]],
    //            data: [59, 31],      //User Data per User how often he missed
                backgroundColor: ['#49A9EA', '#36CAAB']
            }]
        },
        options: {
            title: {
                text: "How accurate is my aim?",
                display: true
            }
        }
    });

}


function myChart2() {
    const htmlconvert = {
        "'" : "&#x27;"

    };

    console.log("A");
    



    var tmpString = "@name";

    var tmpString = tmpString.replace(/&#x27;/g, "'");

    const words = tmpString.split(',');

    let labels2 = words;
    console.log("B");
    var tmpString2 = "@punkte";
    var tmpString3 = tmpString2.replace(/&#x27;/g, " ");
    var tmpString4 = tmpString3.split(',');
    let data2 = new Array();
    for(var i = 0; i < tmpString4.length; i++)
    {
        data2.push(parseInt(tmpString4[i]));
    }


    //let data2 = [1,2,3];


    let colors2 = ['#49A9EA', '#36CAAB', '#34495E', '#B370CF'];

    let myChart2 = document.getElementById("myChart2").getContext('2d');

    let chart2 = new Chart(myChart2, {
        type: 'bar',
        data: {
            labels: labels2,
            datasets: [{
                label: "Points per Target per User",
                data: data2,
                backgroundColor: colors2
            }]
        },
        options: {
            title: {
                text: "Points per Target per User",
                display: true
            },
            legend: {
                display: false
            }
        }
    });

}



function myChart4() {
 var tmpString2 = "@listofAllNames";

   var tmpString2 = tmpString2.replace(/&#x27;/g, "'");

   let words2 = tmpString2.split(',');

  const temp = words2

  
   const uniqueset = new Set(words2);
   
   const backToArray = [...uniqueset]

   backToArray.pop();



       var tmpString2 = "@punkte2";
       
        var tmpString3 = tmpString2.replace(/&#x27;/g, " ");

      
       var tmpString4 = tmpString3.split(',');
       


       let data4 = new Array();

      
       
       for(var i = 0; i < tmpString4.length; i++)
    {
        data4.push(parseInt(tmpString4[i]));
    }



 

let colors4 = ['#49A9EA', '#36CAAB', '#34495E', '#B370CF', '#AC5353', '#CFD4D8'];

let myChart4 = document.getElementById("myChart4").getContext('2d');

let chart4 = new Chart(myChart4, {
    type: 'polarArea',
    data: {
        labels: backToArray,
        datasets: [ {
            data: data4,
            backgroundColor: colors4
        }]
    },
    options: {
        title: {
            text: "Population of the European Union (in mio)",
            display: true
        }
    }
});
}
            </script>
    <script src="~/assets/js/main.js"></script>
    <script src="~/assets/js/liveranking.js"></script>
</body>
</html>